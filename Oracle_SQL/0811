SQL 2.0

제약조건 확인

영역 무결성(domain intergrity) :  열에 저장되는값의 적정 여부를 확인, 적절한 형식의 데이터

        ,NULL 여부와 같은 정해 놓은 범위를 만족하는 데이터임을 규정

개체 무결성(entity intergrity) : 테이블 데이터를 유일하게 식별할 수 있는 기본키는 반드시 값을 가지고

     있어야 하며 NULL이 될 수 있고 중복 될 수 없다. (UNIQUE)

참조 무결성(referential intergrity) : 참조 테이블의 외래키 같은 테이블의 기본키로서

           존재해야 하며 NULL이 가능하다.

[제약 조건 확인]

OWNER : 제약 조건 소유 계정

CONSTRAINT_NAME : 제약 조건 이름(직접 지정하지 않을 경우 DBMS가 자동으로 지정함)

CONSTRAINT_TYPE : 제약 조건 종류 C : CHECK, NOT NULL

    U : UNIQUE

    P : PRIMARY KEY

    R : FOREIGN KEY

TABLE_NAME : 제약 조건을 지정한 테이블 이름



SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME

FROM USER_CONSTRAINTS;



SELECT * FROM LOCATIONS;



#제약 조건 이름을 직접 지정

CREATE TABLE TABLE_NOTNULL2 (

    LOGIN_ID    VARCHAR2(20)  CONSTRAINT TBLNN2_LGNID_NN  NOT NULL,

    LOGIN_PWD   VARCHAR2(20)  CONSTRAINT TBLNN2_LGNPW_NN  NOT NULL,

    TEL         VARCHAR2(20)

);



#이미 지정된 제약조건을 추가하거나 수정해 봅시다.

#14-7 제약조건 추가

SELECT * FROM TABLE_NOTNULL;





#14-8 TEL 컬럼 NULL제거 -> UPDATE

UPDATE TABLE_NOTNULL

    SET TEL =  '010-1234-5678'

WHERE LOGIN_ID ='TEST_ID_01'; 



#제약 조건 이름지정 후 수정

ALTER TABLE TABLE_NOTNULL2

MODIFY (TEL CONSTRAINT TBL_TEL_NN NOT NULL);



SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME

FROM USER_CONSTRAINTS;



#14-11 테이블 구조 확인

DESC TABLE_NOTNULL;



#14-12 이미 이름이 생성된 제약조건 이름 변경하기

ALTER TABLE TABLE_NOTNULL2

RENAME CONSTRAINT TBL_TEL_NN TO TBLNN2_TEL_NN;



#14-13 제약조건 삭제

ALTER TABLE TABLE_NOTNULL2

DROP  CONSTRAINT TBLNN2_TEL_NN;



#TABLE_NOTNULL2 TEL에 NOT NULL 제약조건을 추가하는 코드를 만드시오.

#1분 복습

ALTER TABLE TABLE_NOTNULL2

MODIFY(TEL CONSTRAINT MY_01 NOT NULL);



#14-14

CREATE TABLE TABLE_UNIQUE(

    LOGIN_ID VARCHAR2(20) UNIQUE,

    LOGIN_PWD VARCHAR2(20) NOT NULL,

    TEL       VARCHAR2(20)

);



DESC TABLE_UNIQUE;



SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME

FROM USER_CONSTRAINTS;



SELECT * FROM TABLE_UNIQUE;



#14-16

INSERT INTO TABLE_UNIQUE(LOGIN_ID, LOGIN_PWD, TEL)

VALUES('TEST_ID_01', 'PWD01', '010-1234-5678');



INSERT INTO TABLE_UNIQUE(LOGIN_ID, LOGIN_PWD, TEL)

VALUES(NULL, 'PWD01', '010-1234-5678');



#14-4 유일하게 하나만 있는 값 UNIQUE, NOT NULL ==> PRIMARY KEY

DROP TABLE TABLE_PK;



CREATE TABLE TABLE_PK(

    LOGIN_ID    VARCHAR2(20) CONSTRAINT TBLPK_LOGID_PK PRIMARY KEY,

    LOGIN_PWD   VARCHAR2(20) CONSTRAINT TBLP2_LOGPW_NN NOT NULL,

    TEL         VARCHAR2(20)

);



SELECT * FROM TABLE_PK;



#14-30 생성한 기본키 확인하기

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME

FROM USER_CONSTRAINTS

WHERE TABLE_NAME LIKE 'TABLE_PK%';



#14-32

INSERT INTO TABLE_PK (LOGIN_ID,LOGIN_PWD, TEL)

VALUES ( NULL, 'PW001', '010-1234-5678');



#한발 더 나가기 제약조건을 뒤에 지정하기

CREATE TABLE TABLE_PK3(

    LOGIN_ID    VARCHAR2(20),

    LOGIN_PWD   VARCHAR2(20),

    TEL         VARCHAR2(20),

    PRIMARY KEY (LOGIN_ID),

    CONSTRAINT TBLPK2_LGNPW_NN UNIQUE (LOGIN_PWD)

);



#다른 테이블과 관계 FOREIGN KEY

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME

FROM USER_CONSTRAINTS

WHERE TABLE_NAME IN ('EMP', 'DEPT');



SELECT * FROM DEPT;

SELECT * FROM EMP;



DESC EMP;



#14-38 FK참조하는 컬럼에 존재하지 않는 데이터 입력하기

INSERT INTO EMP(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)

VALUES(9999, '홍길동', 'CLERK', '7788', TO_DATE('2017/04/30', 'YYYY/MM/DD'), 1200, NULL, 50);



 integrity constraint 오류가 뜨면 제약조건에 걸린 것이다.

DELETE FROM EMP WHERE ENAME = '홍길동';

COMMIT;

#14-39

#DEPT_FK 테이블 생성

DROP TABLE DEPT_FK;

CREATE TABLE DEPT_FK(

    DEPTNO NUMBER(2) CONSTRAINT DEPTPK_DEPTNO_PK PRIMARY KEY,

    DNAME VARCHAR2(14),

    LOC VARCHAR2(13)

);

DROP TABLE EMP_FK;

CREATE TABLE EMP_FK(

    EMPNO NUMBER(4) CONSTRAINT EMPFK_EMPNO_PK PRIMARY KEY,

    ENAME VARCHAR2(10),

    JOB   VARCHAR2(9),

    MGR   VARCHAR2(4),

    HIREDATE DATE,

    SAL   NUMBER(7,2),

    COMM NUMBER(7,2),

    DEPTNO NUMBER(2) CONSTRAINT EMPFK_DEPTNO_FK REFERENCES DEPT_FK (DEPTNO) ON DELETE CASCADE

);



SELECT * FROM DEPT_FK;



INSERT INTO EMP_FK

VALUES(9999, 'TEST_NMAME', 'TEST_JOB', NULL, TO_DATE('2001/01/01', 'YYYY/MM/DD'), 3000, NULL, 10);

#14-42 DEPT_FK

INSERT INTO DEPT_FK

VALUES(10, 'TEST_DNAME', 'TEST_LOC');



#14-43 EMP_FK

INSERT INTO EMP_FK

VALUES(9999, 'TEST_NMAME', 'TEST_JOB', NULL, TO_DATE('2001/01/01', 'YYYY/MM/DD'), 3000, NULL, 10);

SELECT * FROM EMP_FK;

SELECT * FROM DEPT_FK;



DELETE FROM DEPT_FK

WHERE DEPTNO = 10;



 ON DELETE CASCADE를 쓰면 제약조건을 무시하고 삭제할수 있지만 위험하다.

CREATE TABLE DEPT_FK(

    DEPTNO NUMBER(2) CONSTRAINT DEPTPK_DEPTNO_PK PRIMARY KEY,

    DNAME VARCHAR2(14),

    LOC VARCHAR2(13)

);

CREATE TABLE EMP_FK(

    EMPNO NUMBER(4) CONSTRAINT EMPFK_EMPNO_PK PRIMARY KEY,

    ENAME VARCHAR2(10),

    JOB   VARCHAR2(9),

    MGR   VARCHAR2(4),

    HIREDATE DATE,

    SAL   NUMBER(7,2),

    COMM NUMBER(7,2),

    DEPTNO NUMBER(2) CONSTRAINT EMPFK_DEPTNO_FK REFERENCES DEPT_FK (DEPTNO) ON DELETE SET NULL

);



#14-45 데이터 형태와 범위를 정하는 CHECK

DROP TABLE TABLE_CHECK;

CREATE TABLE TABLE_CHECK(

    LOGIN_ID VARCHAR2(20) CONSTRAINT TBLCK_LOGINDI_PK PRIMARY KEY,

    LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLCK_LOGINPW_CK CHECK (LENGTH(LOGIN_PWD)>3),

    TEL       VARCHAR2(20) DEFAULT '010-1111-1111'

);

SELECT * FROM TABLE_CHECK;

#14-46 입력

INSERT INTO TABLE_CHECK (LOGIN_ID, LOGIN_PWD)

VALUES ('TEST_ID', '1234');

#제약 조건 확인

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME

    FROM USER_CONSTRAINTS

WHERE TABLE_NAME LIKE 'TABLE_CHECK';



CREATE TABLE DEPT_CONST (

    DEPTNO NUMBER(2) CONSTRAINT DEPTCONST_DEPTNO_PK PRIMARY KEY,

    DNAME VARCHAR2(14) CONSTRAINT DEPTCONST_DNAME_UNQ UNIQUE,

    LOC VARCHAR2(13) CONSTRAINT DEPTCONST_LOC_NN NOT NULL

);

DROP TABLE DEPT_CONST;

CREATE TABLE EMP_CONST (

    EMPNO NUMBER(4) CONSTRAINT EMPCONST_EMPNO_PK PRIMARY KEY,

    ENAME VARCHAR2(10) CONSTRAINT EMPCONST_ENAME_NN NOT NULL,

    JOB VARCHAR2(9),

    TEL VARCHAR2(20) CONSTRAINT EMPCONST_TEL_UNQ UNIQUE,

    HIREDATE DATE,

    SAL NUMBER(7,2) CONSTRAINT EMPCONST_SAL_CHK CHECK(SAL BETWEEN 1000 AND 9999),

    COMM NUMBER(7,2),

    DEPTNO NUMBER(2) CONSTRAINT EMPCONST_DEPTNO_FK REFERENCES DEPT_CONST (DEPTNO)

);

DROP TABLE EMP_CONST;

[SQL] 제약 연습문제 P394 DEPT_CONST테이블과 EMP_CONST테이블 만들어라



관리자 모드 HR말고 SYSTEM에서 사용가능하다.

#사용자 만들기

CREATE USER ORCLSTUDY IDENTIFIED BY ORACLE;

#권한 부여

GRANT CREATE SESSION TO ORCLSTUDY;



#모든 사용자 조회

SELECT * FROM ALL_USERS;

SELECT * FROM DBA_USERS;

SELECT * FROM DBA_OBJECTS;


